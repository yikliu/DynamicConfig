<controls:MetroWindow
    x:Name="_this"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" x:Class="DynamicConfig.ConfigTray.MainWindow"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:crypt1="clr-namespace:DynamicConfig.ConfigTray.Crypt"
    xmlns:util1="clr-namespace:DynamicConfig.ConfigTray.Util"
    xmlns:commands="clr-namespace:DynamicConfig.ConfigTray.Commands"
    Icon="Resources/inin.ico"
    Title="Dynamic Config"
    Height="650" Width="1024">
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="commands:CustomCommands.Create"
                        CanExecute="CreateCommand_CanExecute"
                        Executed="CreateCommand_Executed" />
        <CommandBinding Command="commands:CustomCommands.Delete"
                        CanExecute="DeleteCommand_CanExecute"
                        Executed="DeleteCommand_Executed" />
    </controls:MetroWindow.CommandBindings>
    <controls:MetroWindow.Resources>
        <util1:InvertBooleanConverter x:Key="InvertBooleanConverter" />
        <util1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <util1:EnumMatchToBooleanConverter x:Key="EnumConverter" />
        <util1:EditEncryptBoolConverter x:Key="EditEncryptBoolConverter" />
        
        <Image x:Key="ininImage" Source="Resources/inin.ico"></Image>

        <Style x:Key="FocusBorderTextBox" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="IsFocused"  Value="True">
                    <Setter Property="BorderBrush" Value="SkyBlue" />
                    <Setter Property="BorderThickness" Value="1" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="SkyBlue" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="validationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
                    <Grid Width="12" Height="12">
                        <Ellipse Width="12" Height="12"
            Fill="Red" HorizontalAlignment="Center"
            VerticalAlignment="Center"
                     ></Ellipse>
                        <TextBlock Foreground="White" FontWeight="Heavy"
            FontSize="8" HorizontalAlignment="Center"
            VerticalAlignment="Center" TextAlignment="Center"
                       ToolTip="{Binding ElementName=ErrorAdorner,
                       Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"
                       >X</TextBlock>
                    </Grid>
                    <TextBlock Foreground="Red" FontWeight="12" Margin="2,0,0,0"
                   Text="{Binding ElementName=ErrorAdorner,
                   Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"
                   ></TextBlock>
                </StackPanel>
                <AdornedElementPlaceholder x:Name="ErrorAdorner" ></AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>
    </controls:MetroWindow.Resources>
    <Border
        BorderThickness="1"
        BorderBrush="AntiqueWhite">
        <DockPanel Dock="Top">
            <DockPanel DockPanel.Dock="Top" Height="40">
                <Button Width="100" Content="Reload"  BorderThickness="0"
                        HorizontalAlignment="Left" Margin="5" Click="Reload_Click" />
                <Button Width="100" DockPanel.Dock="Left" Content="Save"
                        BorderThickness="0" HorizontalAlignment="Left" Margin="5" Click="Save_Click" />
                <Rectangle VerticalAlignment="Stretch" Width="1" Margin="15,4" Stroke="Black" HorizontalAlignment="Left" />
                <Button Width="100" DockPanel.Dock="Left" Content="New"
                        BorderThickness="0" HorizontalAlignment="Left" Margin="5"
                        Command="commands:CustomCommands.Create"
                        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Button Width="100" DockPanel.Dock="Left" Content="Delete"
                        BorderThickness="0" HorizontalAlignment="Left" Margin="5"  Command="commands:CustomCommands.Delete"
                        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Menu Height="36" DockPanel.Dock="Right" HorizontalAlignment="Right" Visibility="Collapsed">
                    <MenuItem Header="Support">
                        <MenuItem Header="ISupport" Click="ISupportMenuItem_OnClick" />
                        <MenuItem Header="ServiceNow" Click="ServiceNowMenuItem_OnClick" />
                        <MenuItem Header="Support FTP" />
                        <MenuItem Header="_Exit" />
                    </MenuItem>
                </Menu>
            </DockPanel>
            <DockPanel DockPanel.Dock="Bottom" Height="20">
                <StatusBar DockPanel.Dock="Bottom">
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>
                    <StatusBarItem Grid.Column="0">
                        <TextBlock x:Name="FileLocation" DockPanel.Dock="Left" FontSize="11" HorizontalAlignment="Left" VerticalAlignment="Bottom">JSON File:</TextBlock>
                    </StatusBarItem>
                    <Separator Grid.Column="1" />
                    <StatusBarItem Grid.Column="2">
                        <TextBlock x:Name="LogBlock" TextAlignment="Right" FontSize="11" HorizontalAlignment="Right" VerticalAlignment="Bottom" ></TextBlock>
                    </StatusBarItem>
                </StatusBar>
            </DockPanel>
            <Border
                BorderThickness="1"
                BorderBrush="Black">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
                    <DockPanel Grid.Column="0" VerticalAlignment="Stretch" Height="Auto"
                               Margin="5">
                        <TreeView Name="JSONTreeView" DockPanel.Dock="Top"
                                  ItemsSource="{Binding FirstGeneration}"
                                  VerticalContentAlignment="Stretch"
                                  HorizontalContentAlignment="Stretch"
                                  Height="Auto">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <EventSetter Event="Selected" Handler="OnSelectedItemChanged" />
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <!-- Style for the selected item -->
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Style.Triggers>
                                        <!-- Selected but does not have the focus -->
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="IsSelectionActive" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="BorderBrush" Value="Black" />
                                        </MultiTrigger>
                                    </Style.Triggers>
                                    <Style.Resources>
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="1" />
                                        </Style>
                                    </Style.Resources>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="Resources/lock.ico" Height="18" Width="18"
                                               Visibility="{Binding Path=ShowEncryptionPanel, Mode=OneWay}" />
                                        <TextBlock Text="{Binding Path=DisplayKey, Mode=OneWay}" />
                                        <TextBlock Text=" : " />
                                        <TextBlock Text="{Binding Path=NodeDescription, Mode=OneWay}" TextTrimming="WordEllipsis" TextWrapping="Wrap" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.Resources>
                                <SolidColorBrush Color="CornflowerBlue"  x:Key="{x:Static SystemColors.HighlightBrushKey}" />
                            </TreeView.Resources>
                        </TreeView>
                    </DockPanel>
                    <DockPanel Grid.Column="2" Margin="5">
                        <TextBlock DockPanel.Dock="Top" Text="Edit Node" FontSize="36" />
                        <Rectangle DockPanel.Dock="Top" HorizontalAlignment="Stretch" Fill="Gray" Height="2"
                                   Margin="5,0" />
                        <DockPanel Height="Auto" Margin="0,10,0,0">
                            <DockPanel DockPanel.Dock="Top">
                                <Label DockPanel.Dock="Left" Content="Key:" Width="75" FontSize="25" />
                                <TextBlock x:Name="KeyEdit"
                                         TextWrapping="Wrap"
                                         Text="{Binding Path=KeyLabel,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                         FontSize="25" Width="Auto" Margin="0,7,0,0" />
                                <Label DockPanel.Dock="Left" Content="Type:" Width="75" FontSize="25" Margin="10,0" />
                                <TextBlock x:Name="TypeLabel"
                                         TextWrapping="Wrap"
                                         Text="{Binding Path=TypeLabel,Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                         FontSize="25" Width="Auto" Margin="0,7,0,0" />
                            </DockPanel>
                            <DockPanel DockPanel.Dock="Top">
                                <Label DockPanel.Dock="Left" Content="Value:" FontSize="25" />
                                <CheckBox
                                        x:Name="encryptedCheckBox"
                                        Height="50"
                                        Width="150"
                                        FontSize="20"
                                        Margin="15,0"
                                        DockPanel.Dock="Left"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding Path=ShowEncryptCheckBox, Mode=OneWay}"
                                        IsChecked="{Binding Path=IsEncrypted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock Text="Encrypt" FontSize="20" />
                                </CheckBox>
                            </DockPanel>
                            <DockPanel Dock="Top">
                                <DockPanel x:Name="EncryptPanel"
                                    DockPanel.Dock="Right"
                                    Visibility="{Binding Path=ShowEncryptionPanel, Mode=OneWay}">
                                    <Label DockPanel.Dock="Left" Content="Encryption Method:" FontSize="20" Width="196" />
                                    <RadioButton x:Name="rbMachine"
                                        GroupName="EncryptionMethod" Content="DPAPI_MACHINE" Margin="0,3,0,3"
                                                  IsChecked="{Binding Path=EncryptionMethodUsed, Mode=TwoWay, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static crypt1:EncryptionMethod.DPAPI_MACHINE}}"
                                                 />
                                    <RadioButton x:Name="rbUser"
                                        GroupName="EncryptionMethod" Content="DPAPI_USER" Margin="0,3,0,3" 
                                                 IsChecked="{Binding Path=EncryptionMethodUsed, Mode=TwoWay, 
                                 Converter={StaticResource EnumConverter},
                                 ConverterParameter={x:Static crypt1:EncryptionMethod.DPAPI_USER}}"
                                                 />
                                    <Button
                                        x:Name="encryptButton"
                                        Width="100" Height="28"
                                        HorizontalAlignment="Left"
                                        DockPanel.Dock="Left"
                                        Content="{Binding Path=ContentEditable, Mode=OneWay, 
                                            Converter={StaticResource EditEncryptBoolConverter}
                                        }"
                                        Margin="5" Click="EnableEncryptEdit_OnClick" />
                                </DockPanel>
                            </DockPanel>
                            <StackPanel Height="Auto" Margin="5,0">
                                <TextBox x:Name="ValueEdit" TextWrapping="Wrap"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                         Style="{StaticResource FocusBorderTextBox}"
                                     IsReadOnly ="{Binding Path=ContentEditable, Mode=OneWay, Converter={StaticResource InvertBooleanConverter}}"
                                     FontSize="20" VerticalAlignment="Stretch" Height="200"
                                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                                    <TextBox.Text>
                                        <Binding Path="StringContent" Mode="TwoWay" UpdateSourceTrigger="Explicit" ></Binding>
                                    </TextBox.Text>
                                </TextBox>

                                <Button Content="Apply" Width="80" Height="28" Margin="0,25" HorizontalAlignment="Left" Click="ApplyButton_Click" ></Button>
                                <Button Content="Test" Width="80" Visibility="Collapsed" Height="28" Margin="0,25" HorizontalAlignment="Left" Click="Button_Click" />
                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                </Grid>
            </Border>
        </DockPanel>
    </Border>
</controls:MetroWindow>